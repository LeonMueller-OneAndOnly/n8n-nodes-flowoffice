{"version":3,"file":"api.ts","sources":["../api-schema/api/board.ts","../api-schema/api/index.ts"],"sourcesContent":["import { z } from \"zod\"\n\nconst ZColumnType = z.enum([\n  //mandatory columns\n  \"name\",\n\n  // regular columns\n  \"text\",\n  \"number\",\n  \"date\",\n  \"checkbox\",\n  \"interval\",\n\n  \"phone\",\n  \"email\",\n  \"address\",\n\n  \"rating-stars\",\n  \"erneut-kontaktieren\",\n  \"link\",\n  \"personName\",\n\n  \"zeitauswertung\",\n\n  \"formel\",\n\n  // columns with options\n  \"status\",\n  \"dokument\",\n\n  // project special columns\n  \"kunde\",\n  \"teamMember\",\n  \"aufgaben\",\n  \"cloud\",\n  \"lager\",\n])\n\nconst ZColumn = z.object({\n  columnKey: z.string(),\n  label: z.string(),\n  columnType: ZColumnType,\n\n  columnJSON: z.string().optional(), // For additional column options\n  deactivated: z.boolean().optional(), // Instead of deleting columns only deactivate them to prevent users from shotting themself in the leg\n  disableEditing: z.boolean().optional(), // For showing rows, but preventing users from editing them\n})\n\nconst ZBoard = z.object({\n  boardId: z.number().int(),\n  name: z.string(),\n  columnSchema: ZColumn.array(),\n})\n\nexport const ZListBoardsOutput = z.object({\n  boardGroups: z\n    .object({\n      groupName: z.string(),\n      boards: z\n        .discriminatedUnion(\"type\", [\n          z.object({\n            type: z.literal(\"board\"),\n            board: ZBoard,\n          }),\n          z.object({\n            type: z.literal(\"group\"),\n            groupId: z.string(),\n            groupName: z.string(),\n            boards: z.array(ZBoard),\n          }),\n        ])\n        .array(),\n    })\n    .array(),\n})\n","import { ZListBoardsOutput } from \"./board\"\n\nexport const apiSchema_v1 = {\n  board: {\n    listBoards: {\n      pathname: \"/api/v1/board/list-boards\",\n      schema: ZListBoardsOutput,\n    },\n  },\n} as const\n"],"names":[],"mappings":";;AAEA,MAAM,WAAW,GAAG,CAAC,CAAC,IAAI,CAAC;;IAEzB,MAAM;;IAGN,MAAM;IACN,QAAQ;IACR,MAAM;IACN,UAAU;IACV,UAAU;IAEV,OAAO;IACP,OAAO;IACP,SAAS;IAET,cAAc;IACd,qBAAqB;IACrB,MAAM;IACN,YAAY;IAEZ,gBAAgB;IAEhB,QAAQ;;IAGR,QAAQ;IACR,UAAU;;IAGV,OAAO;IACP,YAAY;IACZ,UAAU;IACV,OAAO;IACP,OAAO;AACR,CAAA,CAAC;AAEF,MAAM,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC;AACvB,IAAA,SAAS,EAAE,CAAC,CAAC,MAAM,EAAE;AACrB,IAAA,KAAK,EAAE,CAAC,CAAC,MAAM,EAAE;AACjB,IAAA,UAAU,EAAE,WAAW;IAEvB,UAAU,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACjC,WAAW,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE;IACnC,cAAc,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE;AACvC,CAAA,CAAC;AAEF,MAAM,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;AACtB,IAAA,OAAO,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE;AACzB,IAAA,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE;AAChB,IAAA,YAAY,EAAE,OAAO,CAAC,KAAK,EAAE;AAC9B,CAAA,CAAC;AAEK,MAAM,iBAAiB,GAAG,CAAC,CAAC,MAAM,CAAC;AACxC,IAAA,WAAW,EAAE;AACV,SAAA,MAAM,CAAC;AACN,QAAA,SAAS,EAAE,CAAC,CAAC,MAAM,EAAE;AACrB,QAAA,MAAM,EAAE;aACL,kBAAkB,CAAC,MAAM,EAAE;YAC1B,CAAC,CAAC,MAAM,CAAC;AACP,gBAAA,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC;AACxB,gBAAA,KAAK,EAAE,MAAM;aACd,CAAC;YACF,CAAC,CAAC,MAAM,CAAC;AACP,gBAAA,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC;AACxB,gBAAA,OAAO,EAAE,CAAC,CAAC,MAAM,EAAE;AACnB,gBAAA,SAAS,EAAE,CAAC,CAAC,MAAM,EAAE;AACrB,gBAAA,MAAM,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC;aACxB,CAAC;SACH;AACA,aAAA,KAAK,EAAE;KACX;AACA,SAAA,KAAK,EAAE;AACX,CAAA,CAAC;;ACxEK,MAAM,YAAY,GAAG;AAC1B,IAAA,KAAK,EAAE;AACL,QAAA,UAAU,EAAE;AACV,YAAA,QAAQ,EAAE,2BAA2B;AACrC,YAAA,MAAM,EAAE,iBAAiB;AAC1B,SAAA;AACF,KAAA;;;;;"}